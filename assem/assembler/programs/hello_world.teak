# prints a global string variable to the screen

.screen_init: tale_of_two_cities.txt # 128x64 = 8192

.glyph_init: ascii_8x8.png # 256x4 = 1024

.data
			hello_world: "Hello World!"

.teak # beginning of assembly code

      li    $r1, 0x1FFF   # VGA screen limit
      li    $r2, 0x0      # start at the beginning of text memory
clr:  write $zero, $r2, 0 # clear character
      beq  $r2, $r1, prnt			# make sure doesn't clear past vga screen
			add   $r2, $r1			# restore $r2
      addi  $r2, 1        # increment to the next memory address
      jl    clr         	# repeat

prnt: li    $r8, hello_world # $r8 = hello_world pointer

			li    $r9, 0x0			# vga location to write to
loop:	read  $r10, $r8, 0 	# get char
			beq $r10, 0, done # if char is null pointer, finish			# 
			write $r10, $r9, 0 	# write char to screen
			addi  $r8, 1 				# increment pointer address
			addi  $r9, 1 				# increment vga location
			jl    loop
done: jl 		done					# hold program
